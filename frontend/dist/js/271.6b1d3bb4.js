"use strict";(self["webpackChunkfrontend"]=self["webpackChunkfrontend"]||[]).push([[271],{6271:function(e,n,o){o.r(n),o.d(n,{default:function(){return S}});var s=o(3396),t=o(9242);const l=e=>((0,s.dD)("data-v-9c287ce0"),e=e(),(0,s.Cn)(),e),u=l((()=>(0,s._)("label",{for:"name"},"Nom du quizz",-1))),a=l((()=>(0,s._)("label",{for:"description"},"Description",-1)));function p(e,n,o,l,p,d){const r=(0,s.up)("MyQuestions"),i=(0,s.up)("router-link");return(0,s.wg)(),(0,s.iD)("form",null,[(0,s._)("div",null,[u,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":n[0]||(n[0]=n=>e.quizzToAdd.name=n),type:"text",name:"name",id:"name",maxlength:"150"},null,512),[[t.nr,e.quizzToAdd.name]])]),(0,s._)("div",null,[a,(0,s.wy)((0,s._)("textarea",{"onUpdate:modelValue":n[1]||(n[1]=n=>e.quizzToAdd.description=n),name:"description",id:"description",cols:"20",rows:"10",maxlength:"300"},null,512),[[t.nr,e.quizzToAdd.description]])]),(0,s.Wm)(r),(0,s._)("div",null,[(0,s.Wm)(i,{to:"/addQuestion"},{default:(0,s.w5)((()=>[(0,s.Uk)("Ajouter une question")])),_:1})])])}var d=o(7139);const r=e=>((0,s.dD)("data-v-14c1323f"),e=e(),(0,s.Cn)(),e),i=r((()=>(0,s._)("label",{for:"question"},"Question",-1))),m=["onUpdate:modelValue"],c=r((()=>(0,s._)("label",{for:"response1"},"Réponse 1",-1))),_=["onUpdate:modelValue"],y=r((()=>(0,s._)("label",{for:"response2"},"Réponse 2",-1))),f=["onUpdate:modelValue"],w=r((()=>(0,s._)("label",{for:"response3"},"Réponse 3",-1))),R=["onUpdate:modelValue"],h=r((()=>(0,s._)("label",{for:"response4"},"Réponse 4",-1))),v=["onUpdate:modelValue"],U=r((()=>(0,s._)("legend",null,"Choix de la bonne réponse",-1))),V={for:"trueResponse"},q=["onUpdate:modelValue"],b={for:"trueResponse"},x=["onUpdate:modelValue"],z={for:"trueResponse"},g=["onUpdate:modelValue"],T={for:"trueResponse"},Q=["onUpdate:modelValue"];function k(e,n,o,l,u,a){return(0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(u.questions,(e=>((0,s.wg)(),(0,s.iD)("form",{key:e.question},[(0,s._)("div",null,[i,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":n=>e.question=n,type:"text",name:"question",id:"question",class:"myInput",maxlength:"200"},null,8,m),[[t.nr,e.question]])]),(0,s._)("div",null,[c,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":n=>e.response1=n,type:"text",name:"response1",id:"response1",class:"myInput",maxlength:"200"},null,8,_),[[t.nr,e.response1]])]),(0,s._)("div",null,[y,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":n=>e.response2=n,type:"text",name:"response2",id:"response2",class:"myInput",maxlength:"200"},null,8,f),[[t.nr,e.response2]])]),(0,s._)("div",null,[w,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":n=>e.response3=n,type:"text",name:"response3",id:"response3",class:"myInput",maxlength:"200"},null,8,R),[[t.nr,e.response3]])]),(0,s._)("div",null,[h,(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":n=>e.response4=n,type:"text",name:"response4",id:"response4",class:"myInput",maxlength:"200"},null,8,v),[[t.nr,e.response4]])]),(0,s._)("fieldset",null,[U,(0,s._)("div",null,[(0,s._)("label",V,(0,d.zw)(e.response1),1),(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":n=>e.trueReponse=n,type:"radio",name:"trueResponse",id:"trueResponse1",class:"inputTrueResponse"},null,8,q),[[t.G2,e.trueReponse]])]),(0,s._)("div",null,[(0,s._)("label",b,(0,d.zw)(e.response2),1),(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":n=>e.trueReponse=n,type:"radio",name:"trueResponse",id:"trueResponse2",class:"inputTrueResponse"},null,8,x),[[t.G2,e.trueReponse]])]),(0,s._)("div",null,[(0,s._)("label",z,(0,d.zw)(e.response3),1),(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":n=>e.trueReponse=n,type:"radio",name:"trueResponse",id:"trueResponse3",class:"inputTrueResponse"},null,8,g),[[t.G2,e.trueReponse]])]),(0,s._)("div",null,[(0,s._)("label",T,(0,d.zw)(e.response4),1),(0,s.wy)((0,s._)("input",{"onUpdate:modelValue":n=>e.trueReponse=n,type:"radio",name:"trueResponse",id:"trueResponse4",class:"inputTrueResponse"},null,8,Q),[[t.G2,e.trueReponse]])])])])))),128)}var I={name:"ShowQuestion",data(){return{questions:[]}},async created(){const e=await fetch("/question");this.question=await e.json()},async getQuestion(){await fetch("/question",{headers:{"Content-type":"application/json"},method:"GET",body:JSON.stringify(this.questionToAdd)}),await this.fetchQuestion()}},A=o(89);const C=(0,A.Z)(I,[["render",k],["__scopeId","data-v-14c1323f"]]);var D=C,G={name:"ShowQuestion",components:{MyQuestions:D}};const j=(0,A.Z)(G,[["render",p],["__scopeId","data-v-9c287ce0"]]);var S=j}}]);
//# sourceMappingURL=271.6b1d3bb4.js.map